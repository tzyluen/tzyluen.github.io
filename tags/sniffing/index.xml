<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sniffing on Technical Notes</title>
    <link>https://tzyluen.github.io/tags/sniffing/</link>
    <description>Recent content in sniffing on Technical Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2015 - 2022. All rights reserved.</copyright>
    <lastBuildDate>Sat, 16 Apr 2016 00:00:00 +0800</lastBuildDate><atom:link href="https://tzyluen.github.io/tags/sniffing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ngrep: quick peek at http traffic</title>
      <link>https://tzyluen.github.io/post/ngrep-quick-peek-at-http-traffic/</link>
      <pubDate>Sat, 16 Apr 2016 00:00:00 +0800</pubDate>
      
      <guid>https://tzyluen.github.io/post/ngrep-quick-peek-at-http-traffic/</guid>
      <description>Table of Contents  Quick peek Sorts out unique User-Agent (devices) Monitor the occurrence of the keywords Monitor HTTP GET | POST traffic by IP addresses DNS     Quick peek Monitor activities on device eth0 port 80:
-W byline: linefeeds (LF) are printed as linefeeds, more readable.
-qt: quiet mode and print human-readable timestamp.
# ngrep -d eth0 -W byline -qt port 80  Sorts out unique User-Agent (devices) In corporate environment, desktop/laptop OS build is often standardized.</description>
    </item>
    
    <item>
      <title>Sniff DNS Queries</title>
      <link>https://tzyluen.github.io/post/sniff-dns-queries/</link>
      <pubDate>Sat, 20 Feb 2016 00:00:00 +0800</pubDate>
      
      <guid>https://tzyluen.github.io/post/sniff-dns-queries/</guid>
      <description>Table of Contents  Dnstop Tcpdump Wireshark / Tshark     Dnstop is a console libpcap application that displays various tables of DNS traffic on a network including:
 Source IP addresses Destination IP addresses Query types Top level domains Second level domains  # dnstop enp0s3 -l 3  Use ctrl-r to reset the counter/refresh the history to get the latest queries.
  Tcpdump Capture packets from port 53 (DNS):</description>
    </item>
    
    <item>
      <title>Capture Network Traffic on WLAN (macOS)</title>
      <link>https://tzyluen.github.io/post/capture-network-traffic-on-wlan-macos/</link>
      <pubDate>Sat, 13 Feb 2016 00:00:00 +0800</pubDate>
      
      <guid>https://tzyluen.github.io/post/capture-network-traffic-on-wlan-macos/</guid>
      <description>Table of Contents  MacOS&amp;rsquo;s Airport Wireshark    MacOS&amp;rsquo;s Airport is a built-in wireless utility comes preinstalled in MacOS.
$ ll /usr/local/bin/airport lrwxr-xr-x 1 root wheel 89 Jun 22 2016 /usr/local/bin/airport@ -&amp;gt; /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport Perform a wireless broadcast scan to get the list of access points in the neighborhood:
Sniff 802.11 frames on channel 1, the output is in pcap format and can be opened with tcpdump/wireshark:
$ airport en0 sniff 1 Capturing 802.</description>
    </item>
    
  </channel>
</rss>
